{"ts":1346868863856,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function doSomething() {\n    alert(\"Hello\");\n}"]],"start1":0,"start2":0,"length1":0,"length2":46}]],"length":46}
{"contributors":[],"silentsave":false,"ts":1346868901209,"patch":[[{"diffs":[[0,"rt(\""],[-1,"Hello"],[1,"Matrix"],[0,"\");\n"]],"start1":32,"start2":32,"length1":13,"length2":14}]],"length":47,"saved":false}
{"contributors":[],"silentsave":false,"ts":1347315568915,"patch":[[{"diffs":[[-1,"function doSomething() {\n    alert(\"Matrix\");\n}"],[1,"/* \nTODO: implement standard Matrix 3D functions + operations\nTODO: implement relevant rotation functions - ASK OLI\nTODO: function to convert AffTrnsfrm to a format compatible w/ OpenGL\n*/\n\n/*--- CONSTRUCTOR ---*/ \nfunction Matrix(a11, a12, a13, a21, a22, a23, a31, a32, a33)\n{\n    // reusable vars\n    var i = -1, j = -1;\n    \n    this.m = [ a11, a12, a13, \n               a21, a22, a23, \n               a31, a32, a33];\n    \n    this.set = function(a11, a12, a13, a21, a22, a23, a31, a32, a33)\n    {\n        this.m = [a11,a12,a13,  a21,a22,a23,  a31,a32,a33];\n        return \"set(): what shall i return?\";\n    };\n    \n    this.toIdentity = function()\n    {\n        this.m = [1,0,0, 0,1,0, 0,0,1];\n        return \"toIdentity(): what shall i return?\";\n    };\n    \n    this.toZero = function()\n    {\n        this.m = [0,0,0, 0,0,0, 0,0,0];\n        return \"toZero(): what shall i return?\";\n    };\n    \n    this.toOnes = function()\n    {\n        this.m = [1,1,1, 1,1,1, 1,1,1];\n        return \"toOnes(): what shall i return?\";\n    };\n    \n    this.add = function()\n    {\n        if(arguments.length == 9)\n        {\n            for(i=0 ; i < arguments.length; i++)\n                this.m[i] += arguments[i];\n            return this.m;\n        }\n        else\n            return false;\n\n    };\n    \n    this.subtr = function()\n    {\n        if(arguments.length === 9)\n        {\n            for(i=0 ; i < arguments.length; i++)\n                this.m[i] -= arguments[i];\n            return this.m;\n        }\n        else\n            return false;\n    };\n    \n    this.mult = function()\n    {\n        return false;\n    };\n\n    this.vectormult = function()\n    {\n        return false;\n    };\n\n    this.scalarmult = function()\n    {\n        return false;\n    };\n\n    this.div = function()\n    {\n        return false;\n    };\n\n    this. transpose = function()\n    {\n        return false;\n    };\n    \n    this.det = function()\n    {\n        return false;\n    };\n    \n    this.invert = function()\n    {\n        return false;\n    };\n\n    this.equals = function()\n    {\n        var valid = (arguments.length === 9);\n        i = 0;\n        while(valid === true && i < 9)\n        {\n            valid &= (this.m[i] === arguments[i]);\n            i++;\n        }\n        return valid;\n    };\n    \n    this.toString = function() \n    {\n        var ms = \"\";\n        for(i = 0; i < 3; i++) {\n            for(j = 0; j < 3; j++) {\n                ms += this.m[i * 3 + j];\n            }\n            ms += '</br>';\n        }\n        return ms;\n    };\n}\n\n\n\n\n\n"]],"start1":0,"start2":0,"length1":47,"length2":2529}]],"length":2529,"saved":false}
{"ts":1347315633000,"patch":[[{"diffs":[[0,"urn "],[-1,"\"toIdentity(): what shall i return?\""],[1,"this"],[0,";\n  "]],"start1":709,"start2":709,"length1":44,"length2":12}]],"length":2497,"saved":false}
{"ts":1347315647853,"patch":[[{"diffs":[[0,"urn "],[-1,"\"toZero(): what shall i return?\""],[1,"this"],[0,";\n  "]],"start1":817,"start2":817,"length1":40,"length2":12}]],"length":2469,"saved":false}
{"ts":1347315654842,"patch":[[{"diffs":[[0,"urn "],[-1,"\"toOnes(): what shall i return?\""],[1,"this"],[0,";\n  "]],"start1":925,"start2":925,"length1":40,"length2":12}]],"length":2441,"saved":false}
{"ts":1347315667750,"patch":[[{"diffs":[[0,".add = function("],[1,"M"],[0,")\n    {\n        "]],"start1":955,"start2":955,"length1":32,"length2":33}]],"length":2442,"saved":false}
{"ts":1347315762762,"patch":[[{"diffs":[[0,"unction("],[-1,"M"],[1,"mat"],[0,")\n    {\n"]],"start1":963,"start2":963,"length1":17,"length2":19}]],"length":2444,"saved":false}
{"ts":1347315784128,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        if(arguments.length == 9)\n        {\n    "],[0,"    "]],"start1":978,"start2":978,"length1":56,"length2":8},{"diffs":[[0,"++)\n            "],[-1,"    "],[0,"this.m[i] += arg"]],"start1":1023,"start2":1023,"length1":36,"length2":32},{"diffs":[[0,"nts[i];\n        "],[-1," "],[-1,"   "],[0,"return this.m;\n "]],"start1":1058,"start2":1058,"length1":36,"length2":32},{"diffs":[[0,"s.m;"],[-1,"\n        }\n        else\n            return false;"],[0,"\n\n  "]],"start1":1084,"start2":1084,"length1":57,"length2":8}]],"length":2339,"saved":false}
{"ts":1347316108645,"patch":[[{"diffs":[[0,"a32, a33"],[1," "],[0,"];\n    \n"]],"start1":410,"start2":410,"length1":16,"length2":17}]],"length":2340,"saved":false}
{"ts":1347316168639,"patch":[[{"diffs":[[0,"rix("],[-1,"a11, a12, a13, a21, a22, a23, a31, a32, a33"],[1,"mat"],[0,")\n{\n"]],"start1":227,"start2":227,"length1":51,"length2":11}]],"length":2300,"saved":false}
{"ts":1347316195794,"patch":[[{"diffs":[[0,"m = "],[-1,"[ a11, a12, a13, \n               a21, a22, a23, \n               a31, a32, a33 ]"],[1,"mat"],[0,";\n  "]],"start1":297,"start2":297,"length1":87,"length2":11}]],"length":2224,"saved":false}
{"ts":1347316201735,"patch":[[{"diffs":[[0,".m = mat"],[1,".m"],[0,";\n    \n "]],"start1":296,"start2":296,"length1":16,"length2":18}]],"length":2226,"saved":false}
{"ts":1347316236820,"patch":[[{"diffs":[[0,"ion("],[-1,"a11, a12, a13, a21, a22, a23, a31, a32, a33"],[1,"mat"],[0,")\n  "]],"start1":333,"start2":333,"length1":51,"length2":11}]],"length":2186,"saved":false}
