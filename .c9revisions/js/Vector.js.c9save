{"ts":1346952472891,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1347133497412,"patch":[[{"diffs":[[1,"function Vector2(vec) {\n    this.x = vec.x\n    this.y = vec.y\n    \n    this.add = function(vec) {\n        this.x += vec.x\n        this.y += vec.y\n        \n        return this\n    }\n    \n    this.sub = function(vec) {\n        this.x -= vec.x\n        this.y -= vec.y\n        \n        return this\n    }\n    \n    this.toString = function() {\n        return \"[\" + this.x + \", \" + this.y + \"]\"\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":395}]],"length":395,"saved":false}
{"contributors":[],"silentsave":false,"ts":1347221080452,"patch":[[{"diffs":[[0,"x = "],[-1,"vec.x\n    this.y ="],[1,"typeof vec === 'undefined' ? 0 : vec.x\n    this.y = typeof vec === 'undefined' ? 0 :"],[0," vec"]],"start1":33,"start2":33,"length1":26,"length2":92},{"diffs":[[0,"n(vec) {\n       "],[1," return {\n            x:"],[0," this.x += vec.x"]],"start1":155,"start2":155,"length1":32,"length2":56},{"diffs":[[0,"this.x +"],[-1,"="],[0," vec.x"],[-1,"\n"],[1,", \n "],[0,"       "],[1,"    y:"],[0," this.y "]],"start1":196,"start2":196,"length1":31,"length2":39},{"diffs":[[0,".y +"],[-1,"= vec.y\n        \n        return this\n    }\n    \n    this.sub"],[1," vec.y\n        }\n    }\n    \n    this.sub = function(vec) {\n        this.x -= vec.x\n        this.y -= vec.y\n        \n        return this\n    }\n    \n    this.mul = function(vec) {\n        this.x *= vec.x\n        this.y *= vec.y\n        \n        return this\n    }\n    \n    this.div"],[0," = f"]],"start1":232,"start2":232,"length1":68,"length2":286},{"diffs":[[0,"\n        this.x "],[-1,"-"],[1,"/"],[0,"= vec.x\n        "]],"start1":532,"start2":532,"length1":33,"length2":33},{"diffs":[[0,"\n        this.y "],[-1,"-"],[1,"/"],[0,"= vec.y\n        "]],"start1":556,"start2":556,"length1":33,"length2":33},{"diffs":[[0,"this\n    }\n    \n"],[1,"    this.dot = function(vec) {\n        return this.x*vec.x + this.y*vec.y\n    }\n    \n    this.dist = function(vec) {\n        \n        return Math.sqrt(this.x*vec.x)\n    }\n    \n"],[0,"    this.toStrin"]],"start1":605,"start2":605,"length1":32,"length2":208}]],"length":887,"saved":false}
{"ts":1347221361149,"patch":[[{"diffs":[[0," return "],[1,"new Vector2("],[0,"{\n      "]],"start1":171,"start2":171,"length1":16,"length2":28},{"diffs":[[0,".y\n        }"],[1,")"],[0,"\n    }\n    \n"]],"start1":252,"start2":252,"length1":24,"length2":25}]],"length":900,"saved":false}
